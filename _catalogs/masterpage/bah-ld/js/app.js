"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities"),resourceJobFamily=[],resourceFunctionalCommunity=[],container="#learningplans-container",thiscontainer=$(container),resultsParentContainer=".learningplans-results-column",resultsNavigationContainer=".alpha-filter",resultsContainer=".results",filterParentContainer=".filter-column",filterContainer=".filter-group-options";module.exports={load:function(){analyticsu.resetWebPart(),analyticsu.buildWebPart();var a=setInterval(function(){0!=$(".learningplan-item").size()&&(analyticsu.buildRefinement(),analyticsu.filterResultsByAlphabet(),analyticsu.filterResultsByRefinement(),$(".trimmed").each(function(){var a=$(this).height();$(this).attr("data-height",a),$(this).css("height","90px")}),$(".description-toggle-link").click(function(a){if(a.preventDefault(),$(this).hasClass("description-more-link")){var i=$(this).parent().find(".trimmed").attr("data-height");$(this).parent().find(".trimmed").animate({height:i}),$(this).prev().hide(),$(this).css("opacity","0")}else $(this).parent().animate({height:90}),$(this).closest(".description").find(".description-more-link").css("opacity","1"),$(this).closest(".description").find(".description-overlay").show()}),$(window).on("hashchange",function(a){var i=window.location.hash.replace("#","");i=decodeURIComponent(i);var l=$(".alphabet > ul > li > a"),e=$(".filter-group > ul > li"),t=$(".learningplan-item"),s=0;if(t.hide(),$(".mobile-alpha-list").removeClass("active"),$(".alphabet > ul > li > a").removeClass("mobile-active"),0===i.length||"all"===i)e.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),t.fadeIn(400),s=t.size();else if(1===i.length)e.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').removeClass("active"),$('[data-alpha-filter="'+i+'"]').fadeIn(400),$('[data-alpha="'+i+'"]').addClass("active"),s=$('[data-alpha-filter="'+i+'"]').size();else{l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),e.removeClass("active"),$(".course-info, .service-info").remove();var r=i.split(",");t.each(function(a){var i=[];$(this).find(".tags span").each(function(){i.push(this)});var l=i.map(function(a){return a.textContent}),e=r.every(function(a){return 0<=l.indexOf(a)}),t=r.length;for(a=0;a<t;a++){var n=r[a];$('[data-filter="'+n+'"]').addClass("active")}e&&(s+=1,$(this).fadeIn(400))})}$(".no-results").remove(),0===s&&($('<div class="no-results">There are no results. <a href="#">VIEW ALL</a></div>').appendTo(".results"),$(".course-info, .service-info").remove(),$(".no-results a").click(function(a){a.preventDefault(),t.hide(),l.removeClass("active"),e.removeClass("active"),$('[data-alpha="all"]').addClass("active"),$('[data-filter="all"]').addClass("active"),t.fadeIn(400),$(".no-results").remove();window.location.hash="#all"}))}),clearInterval(a),$(window).trigger("hashchange"))},100)},buildWebPart:function(){thiscontainer.append('<div class="filter-toggle"><i class="fa fa-filter" aria-hidden="true"></i><span class="text">Filter</span></div><div class="filter-column col-md-3"></div>'),thiscontainer.append('<div class="learningplans-results-column col-md-9">'),$(resultsParentContainer).append('<div class="alpha-filter">'),analyticsu.buildAlphabet(),$(resultsParentContainer).append('</div><div class="row no-gutter info-container"></div>'),$(resultsParentContainer).append('<div class="results">'),lists.getListItems({listname:"AnalyticsU Plans",fields:"Title,Desc,Enabled,LinkURL,OpenLinkInNewWindow,JobFamily,FunctionalCommunity",orderby:"Title"},function(a){for(var i=a.d.results,l=0;l<i.length;l++){var e=i[l].Title,t=i[l].Desc,n=i[l].Enabled,s=i[l].OpenLinkInNewWindow,r=e.toLowerCase().substring(0,1),o="",d='<div class="title">'+e+"</div>";if(null==t&&null==t||(o='<div class="description">'+t+"</div>"),n){if(null!=i[l].LinkURL&&null!=i[l].LinkURL){var h=i[l].LinkURL;d=s?'<div class="title"><a href="'+h+'" class="learningplan-title" target="_blank">'+e+"</a></div>":'<div class="title"><a href="'+h+'" class="learningplan-title">'+e+"</a></div>"}var c='<div class="learningplan-item" data-alpha-filter="'+r+'">'+d+o+'<div class="tags">';a="";i[l].JobFamily&&i[l].JobFamily.length&&(a+='<span class="JobFamily">'+i[l].JobFamily+"</span>",resourceJobFamily.push(i[l].JobFamily)),i[l].FunctionalCommunity&&i[l].FunctionalCommunity.length&&(a+='<span class="FunctionalCommunity">'+i[l].FunctionalCommunity+"</span>",resourceFunctionalCommunity.push(i[l].FunctionalCommunity));$(resultsContainer).append(c+a+"</div></div>")}}}),$(resultsParentContainer).append("</div>"),thiscontainer.append("</div>")},buildAlphabet:function(){$(resultsNavigationContainer).append('<div class="alphabet"><ul><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div>'),$("#learningplans-container").prepend('<div class="alpha-filter"><div class="alphabet mobile-alphabet"><div class="mobile-alpha-trigger"><span class="arrow"><i class="fa fa-angle-down" aria-hidden="true"></i></span></div><ul class="mobile-alpha-list"><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div></div>')},buildRefinement:function(){resourceJobFamily.sort(),resourceFunctionalCommunity.sort(),$(filterParentContainer).append('<div id="all-filter" class="filter-group" class="opened"><ul class="filter-group-options"><li data-filter="all" class="active"><div class="filter-checkbox"></div><div class="filter-title">VIEW ALL</div></li></ul></div>'),$(filterParentContainer).append('<div id="job-family" class="filter-group" class="opened"><h3 class="filter-group-title">Job Family</h3><ul class="filter-group-options">'),analyticsu.getUniqueResults(resourceJobFamily).forEach(function(a){analyticsu.addRefinementItem(a,"job-family")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="functional-community" class="filter-group" class="opened"><h3 class="filter-group-title">Functional Community</h3><ul class="filter-group-options">'),analyticsu.getUniqueResults(resourceFunctionalCommunity).forEach(function(a){analyticsu.addRefinementItem(a,"functional-community")}),$(filterParentContainer).append("</ul></div>")},addRefinementItem:function(a,i){$("#"+i+"> ul").append('<li data-filter="'+a+'"><div class="filter-checkbox"></div><div class="filter-title">'+a+"</div></li>")},filterResultsByAlphabet:function(){$(".mobile-alpha-trigger").click(function(){$(".mobile-alpha-list").addClass("active"),$(this).next().find("a").addClass("mobile-active")}),$(".alphabet > ul > li > a").click(function(a){a.preventDefault();var i="#"+$(this).attr("data-alpha").toLowerCase();window.location.hash=i})},filterResultsByRefinement:function(){$(".filter-toggle").click(function(){$(this).hasClass("active")?($(this).removeClass("active"),$(".filter-column").slideUp(400)):($(this).addClass("active"),$(".filter-column").slideDown(400))}),$(".filter-group > ul > li").click(function(){var a=$(this).attr("data-filter").toLowerCase(),l="all";"all"!=a&&(this.classList.toggle("active"),$('[data-filter="all"]').removeClass("active"),l="",$("[data-filter].active").each(function(a){var i=$(this).attr("data-filter");l=0<a?l.concat(","+i):l.concat(i)}));var i="#"+l;window.location.hash=i})},getUniqueResults:function(a){return a.filter(function(a,i,l){return l.indexOf(a)==i})},resetWebPart:function(){$("#learningplans-container").empty()}};
"use strict";var bones=window.bones=require("./bones"),lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities");$.carousel=require("./carousel").carousel;var resources=window.resources=require("./resources"),universities=window.universities=require("./universities"),news=window.news=require("./news"),bahcarousel=window.bahcarousel=require("./bahcarousel"),tiles=window.tiles=require("./tiles"),partnerships=window.partnerships=require("./partnerships"),learningplans=window.learningplans=require("./learningplans"),tabify=window.tabify=require("./tabify"),eandsuplans=window.eandsuplans=require("./eandsuplans"),analyticsu=window.analyticsu=require("./analyticsu"),imagemap=window.imagemap=require("./imagemap");utilities.scrollAction(),utilities.loadExecuteRequestor(),0<$(".wp-resources").size()&&resources.load(),0<$(".wp-universities").size()&&universities.load(),0<$(".wp-news").size()&&news.load(),0<$(".wp-carousel").size()&&bahcarousel.load(),0<$(".wp-tiles").size()&&tiles.load(),0<$(".wp-partnerships").size()&&partnerships.load(),0<$(".wp-learningplans").not("#wp-eandsuplans").not("#wp-analyticsu").size()&&learningplans.load(),0<$("#wp-eandsuplans").size()&&eandsuplans.load(),0<$("#wp-analyticsu").size()&&analyticsu.load(),$(".wp-tabs").tabify(),0<$(".triangle-container").size()&&imagemap.load({container:".triangle-container",originalwidth:1600}),utilities.responsiveImages(),utilities.responsiveImages({image:".hero-image img"}),utilities.showIfNotEmpty({element:".grey-bar-text .ms-rtestate-field",showElement:".grey-container"}),utilities.showIfNotEmpty({element:".grey-bar-zone",showElement:".grey-container"}),utilities.showIfNotEmpty({element:"aside",showElement:"aside"}),utilities.siteBreadcrumb(),lists.getListItems({listname:"Related Sites",siteurl:bones.sitecollection.url,fields:"Title,Enabled,LinkURL,SortOrder,OpenLinkInNewWindow",orderby:"SortOrder"},function(e){for(var i=e.d.results,s=$("#related-sites"),t=0;t<i.length;t++){var n=i[t].Title,r=i[t].Enabled,a=i[t].LinkURL,o=i[t].OpenLinkInNewWindow;r&&(o?s.append('<div class="related-site-link"><a href="'+a.Url+'" alt="'+n+'" target="_blank">'+n+"</a></div>"):s.append('<div class="related-site-link"><a href="'+a.Url+'" alt="'+n+'">'+n+"</a></div>"))}}),lists.getListItems({listname:"Footer Contact Info",siteurl:bones.sitecollection.url,fields:"Title,HTMLDescription,SortOrder",orderby:"SortOrder"},function(e){for(var i=e.d.results,s=$(".footer-contact-info"),t=0;t<i.length;t++){var n=i[t].Title,r=i[t].HTMLDescription;s.append('<div class="footer-contact-item"><h4 class="footer-info-heading">'+n+'</h4><div class="info">'+r+"</div></div>")}}),lists.getListItems({listname:"Footer Bottom Links",siteurl:bones.sitecollection.url,fields:"Title,Enabled,LinkURL,SortOrder",orderby:"SortOrder"},function(e){for(var i=e.d.results,s=$(".footer-bottom-container"),t=0;t<i.length;t++){var n=i[t].Title,r=i[t].Enabled,a=i[t].LinkURL;r&&s.append('<a href="'+a.Url+'" alt="'+n+'">'+n+"</a>")}}),$(window).load(function(){0==$("#s4-ribbonrow").size()&&$("#s4-workspace").height($(window).height()).width($(window).width()).addClass("no-ribbon")}),$(window).resize(function(){0==$("#s4-ribbonrow").size()&&$("#s4-workspace").height($(window).height()).width($(window).width()).addClass("no-ribbon")}),$(".hero-text-content").html($(".hero-text-content").text()).css("display","block"),$('header nav a:not([href^="'+bones.web.url+'"]):not([href^="/"])').attr("target","_blank"),bones.page.editmode||$(".bah-accordion").accordion({heightStyle:"content",collapsible:!0,active:!1}).closest(".ms-webpartzone-cell").addClass("wp-accordion-cell");
"use strict";var lists=window.lists=require("./lists");module.exports={load:function(e){var c,d=$.extend(!0,{},{trigger:".wp-carousel",container:".carousel-container",contenttypeid:"0x010015F950C274B07E4383EC13B86EAE52F4"},e);c=jQuery,lists.buildwebpart({trigger:d.trigger,container:d.container}),c(d.container).each(function(){var o=c(this);o.find("ul").remove();var l=o.closest(".ms-webpartzone-cell").find(d.trigger).attr("data-list");bones.page.editmode||lists.getListItems({listname:l,fields:"Title,Enabled,SortOrder,Id",orderby:"SortOrder"},function(e){var t=e.d.results;o.append("<ul/>");for(var r=o.find("ul"),i=0;i<t.length;i++){var n=t[i].Title,s=t[i].Enabled,a=t[i].Id;s&&(r.append('<li class="carousel-slide row no-gutter"><div class="hero-image carousel-image-'+a+'"></div><div class="hero-text"><span class="hero-text-pluses"><span class="hero-text-content hero-text-content-'+a+'">'+n+"</span></span></div></li>"),c(".hero-text-content-"+a).html(c(".hero-text-content-"+a).text()).css("display","block")),lists.getListFieldValuesHTML({listname:l,fields:"HeroImage",id:a},function(e,t){var r=e.d.HeroImage,i=setInterval(function(){if(0!=c(r)[0].width){var e=c(r).attr("src");o.find(".carousel-image-"+t).css("cssText","background-image:url("+e+")"),clearInterval(i)}},100)})}c(d.container).carousel({loop:!0,navigation:!0,autoplay:!0})})}),lists.editwebpart({trigger:d.trigger,container:d.container,contenttypeid:d.contenttypeid})}};
"use strict";module.exports={digest:document.getElementById("__REQUESTDIGEST").value,host:{env:_spPageContextInfo.env,farm:_spPageContextInfo.farmLabel,name:window.location.host,protocol:window.location.protocol,url:window.location.protocol+"//"+window.location.host},list:{id:_spPageContextInfo.listId,title:_spPageContextInfo.listTitle,url:_spPageContextInfo.listUrl},page:{editmode:"1"==document.getElementById("MSOLayout_InDesignMode").value,id:_spPageContextInfo.pageItemId,language:_spPageContextInfo.currentLanguage,physical:_spPageContextInfo.serverRequestPath,title:document.title},sitecollection:{id:_spPageContextInfo.siteId,relative:_spPageContextInfo.siteServerRelativeUrl.replace(/^\/|\/$/g,""),url:_spPageContextInfo.siteAbsoluteUrl.replace(/^\/|\/$/g,"")},user:{id:_spPageContextInfo.userId,key:_spPageContextInfo.systemUserKey,name:_spPageContextInfo.userDisplayName},web:{id:_spPageContextInfo.webId,logo:_spPageContextInfo.webLogoUrl,relative:_spPageContextInfo.webServerRelativeUrl.replace(/^\/|\/$/g,""),title:_spPageContextInfo.webTitle,url:_spPageContextInfo.webAbsoluteUrl.replace(/^\/|\/$/g,"")}};
"use strict";module.exports={carousel:function(c){c.fn.carousel=function(e){var l=c.extend({},{paging:!1,navigation:!1,loop:!1,autoplay:!1,delay:12e3,buttons:{previous:"Previous",next:"Next",navigation:"%i"},movethreshold:10,swipethreshold:10,oninit:!1,onupdate:!1,destroy:!1},e),o=!1;return window.optimusPrime=!1,("WebkitTransform"in document.body.style||"MozTransform"in document.body.style||"transform"in document.body.style)&&(window.optimusPrime=!0),this.each(function(){var u=c(this),n=u.find("ul:eq(0)");l.destroy?u.trigger("carousel-destroy"):(u.on("carousel-init",function(){if(u.data("carousel-position",0),u.data("carousel-touch-change",0),u.data("carousel-last-touch",!1),u.data("carousel-item-count",n.children().size()),u.addClass("ui-carousel"),n.addClass("ui-carousel-shaker"),l.paging){var e=c('<button class="previous"><span>'+l.buttons.previous+"</span></button>");e.on("click",function(e){e.preventDefault(),u.data("carousel-last-touch",!1),u.trigger("carousel-retreat")}),u.append(e);var o=c('<button class="next"><span>'+l.buttons.next+"</span></button>");o.on("click",function(e){e.preventDefault(),u.data("carousel-last-touch",!1),u.trigger("carousel-advance")}),u.append(o)}if(l.navigation){for(var a=c('<ul class="ui-carousel-nav"/>'),t=0;t<u.data("carousel-item-count");t++){var s=l.buttons.navigation.replace("%i",t+1),i=c("<button><span>"+s+"</span></button>");i.data("carousel-item",t),i.on("click",function(e){e.preventDefault();var o=c(this).data("carousel-item");o=o*(n.children("li:eq(0)").width()/n.width()*100)*-1,u.data("carousel-position",o),u.data("carousel-last-touch",!1),u.trigger("carousel-contain"),u.trigger("carousel-slide")});var r=c("<li/>");r.append(i),0===t&&r.addClass("ui-active"),a.append(r)}u.append(a)}u.trigger("carousel-contain"),l.autoplay&&u.trigger("carousel-queue"),"function"==typeof l.oninit&&l.oninit()}),u.on("carousel-touch-down",function(e,o){u.addClass("ui-touch-threshold"),u.data("carousel-touch-start",{x:o.x,y:c(window).scrollTop()}),l.autoplay&&u.trigger("carousel-dequeue")}),u.on("carousel-touch-move",function(e,o){if(u.hasClass("ui-touch-threshold")){var a=u.data("carousel-touch-start");Math.abs(c(window).scrollTop()-a.y)>=l.movethreshold?u.removeClass("ui-touch-threshold"):Math.abs(o.x-a.x)>=l.movethreshold&&(u.removeClass("ui-touch-threshold").addClass("ui-touch-swiping"),c("body").addClass("ui-swiping"))}if(u.hasClass("ui-touch-swiping")){a=u.data("carousel-touch-start");var t=o.x-a.x,s=(o=u.data("carousel-position"),t/n.width()*100);u.data("carousel-touch-change",s);var i=o+s;window.optimusPrime?n.css({WebkitTransform:"translateX("+i+"%)",MozTransform:"translateX("+i+"%)",transform:"translateX("+i+"%)"}):n.css("left",i+"%"),"function"==typeof l.onupdate&&l.onupdate(i)}}),u.on("carousel-touch-up",function(){if(u.hasClass("ui-touch-threshold"))u.removeClass("ui-touch-threshold");else if(u.hasClass("ui-touch-swiping")){u.removeClass("ui-touch-swiping"),c("body").removeClass("ui-swiping");var e=u.data("carousel-position"),o=u.data("carousel-touch-change");if(o>=l.swipethreshold)o<=(a=n.children("li:eq(0)").width()/n.width()*100)&&(o=a);else if(o<=-1*l.swipethreshold){var a;-1*(a=n.children("li:eq(0)").width()/n.width()*100)<=o&&(o=-1*a)}u.data("carousel-last-touch",!0),u.data("carousel-position",e+o),u.trigger("carousel-contain"),u.trigger("carousel-slide")}l.autoplay&&u.trigger("carousel-queue")}),u.on("carousel-queue",function(){o=setTimeout(function(){u.data("carousel-last-touch",!1),u.trigger("carousel-advance")},l.delay)}),u.on("carousel-dequeue",function(){clearTimeout(o)}),u.on("carousel-advance",function(){var e=u.data("carousel-position");e-=n.children("li:eq(0)").width()/n.width()*100,u.data("carousel-position",e),u.trigger("carousel-contain"),u.trigger("carousel-slide"),l.autoplay&&(u.trigger("carousel-dequeue"),u.trigger("carousel-queue"))}),u.on("carousel-retreat",function(){var e=u.data("carousel-position");e+=n.children("li:eq(0)").width()/n.width()*100,u.data("carousel-position",e),u.trigger("carousel-contain"),u.trigger("carousel-slide"),l.autoplay&&(u.trigger("carousel-dequeue"),u.trigger("carousel-queue"))}),u.on("carousel-contain",function(){var e=n.children("li:eq(0)").width()/n.width()*100,o=Math.round(100/e),a=u.data("carousel-item-count"),t=u.data("carousel-position");if(0<(t=Math.round(t/e)*e)?t=l.loop&&!u.data("carousel-last-touch")?e*(a-o)*-1:0:t<e*(a-o)*-1&&(t=l.loop&&!u.data("carousel-last-touch")?0:e*(a-o)*-1),!l.loop&&l.paging&&0<=t?u.children("button.previous").prop("disabled",!0):!l.loop&&l.paging&&u.children("button.previous[disabled]").prop("disabled",!1),!l.loop&&l.paging&&t<=e*(a-o)*-1?u.children("button.next").prop("disabled",!0):!l.loop&&l.paging&&u.children("button.next[disabled]").prop("disabled",!1),u.data("carousel-position",t),l.navigation){var s=Math.round(Math.abs(t)/e),i=u.children("ul.ui-carousel-nav");i.children().removeClass("ui-active"),i.children().eq(s).addClass("ui-active")}}),u.on("carousel-slide",function(){var e=u.data("carousel-position");window.optimusPrime?n.css({WebkitTransform:"translateX("+e+"%)",MozTransform:"translateX("+e+"%)",transform:"translateX("+e+"%)"}):n.animate({left:e+"%"},300),"function"==typeof l.onupdate&&l.onupdate(e)}),u.on("carousel-destroy",function(){u.removeData("carousel-position"),u.removeData("carousel-item-count"),u.off("carousel-init carousel-advance carousel-retreat carousel-slide"),u.children("button.previous,button.next").remove(),u.removeClass("ui-carousel"),n.removeClass("ui-carousel-shaker"),window.optimusPrime?n.css({WebkitTransform:"translateX(0%)",MozTransform:"translateX(0%)",transform:"translateX(0%)"}):n.css("left","0%"),0===c(".ui-carousel").size()&&(c(window).off("resize"),c(document).off("mousedown touchstart mousemove touchmove mouseup touchend touchleave touchcancel"),c("body").removeClass("ui-draggables-listen"))}),u.trigger("carousel-init"))}),c("body").hasClass("ui-draggables-listen")||(c("body").addClass("ui-draggables-listen"),c(window).on("resize orientationchange",function(e){c(".ui-carousel").trigger("carousel-slide"),c(".ui-carousel").trigger("carousel-contain")}),c(document).on("mousedown touchstart",function(e){if((e.pageX||e.originalEvent.touches)&&c(e.target).is(".ui-carousel,.ui-carousel *:not(.slider-handle,.slider-handle *)")&&3!=e.which){var o=c(e.target).closest(".ui-carousel");c(o).trigger("carousel-touch-down",[{x:e.pageX?e.pageX:e.originalEvent.touches[0].pageX,y:e.pageY?e.pageY:e.originalEvent.touches[0].pageY}]),navigator.userAgent.match(/Android/i)}}),c(document).on("mousemove touchmove",function(e){(e.pageX||e.originalEvent.touches)&&(c("body").hasClass("ui-swiping")&&e.preventDefault(),c(".ui-carousel.ui-touch-threshold,.ui-carousel.ui-touch-swiping").each(function(){c(this).trigger("carousel-touch-move",[{x:e.pageX?e.pageX:e.originalEvent.touches[0].pageX,y:e.pageY?e.pageY:e.originalEvent.touches[0].pageY}])}))}),c(document).on("mouseup touchend touchleave touchcancel",function(e){c(".ui-carousel.ui-touch-threshold,.ui-carousel.ui-touch-swiping").each(function(){c(this).trigger("carousel-touch-up")})})),this}}(jQuery)};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities"),resourceJobFamily=[],resourceFunctionalCommunity=[],resourceCareerTrack=[],container="#learningplans-container",thiscontainer=$(container),resultsParentContainer=".learningplans-results-column",resultsNavigationContainer=".alpha-filter",resultsContainer=".results",filterParentContainer=".filter-column",filterContainer=".filter-group-options";module.exports={load:function(){eandsuplans.resetWebPart(),eandsuplans.buildWebPart();var a=setInterval(function(){0!=$(".learningplan-item").size()&&(eandsuplans.buildRefinement(),eandsuplans.filterResultsByAlphabet(),eandsuplans.filterResultsByRefinement(),$(".trimmed").each(function(){var a=$(this).height();$(this).attr("data-height",a),$(this).css("height","90px")}),$(".description-toggle-link").click(function(a){if(a.preventDefault(),$(this).hasClass("description-more-link")){var e=$(this).parent().find(".trimmed").attr("data-height");$(this).parent().find(".trimmed").animate({height:e}),$(this).prev().hide(),$(this).css("opacity","0")}else $(this).parent().animate({height:90}),$(this).closest(".description").find(".description-more-link").css("opacity","1"),$(this).closest(".description").find(".description-overlay").show()}),$(window).on("hashchange",function(a){var e=window.location.hash.replace("#","");e=decodeURIComponent(e);var l=$(".alphabet > ul > li > a"),i=$(".filter-group > ul > li"),t=$(".learningplan-item"),r=0;if(t.hide(),$(".mobile-alpha-list").removeClass("active"),$(".alphabet > ul > li > a").removeClass("mobile-active"),0===e.length||"all"===e)i.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),t.fadeIn(400),r=t.size();else if(1===e.length)i.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').removeClass("active"),$('[data-alpha-filter="'+e+'"]').fadeIn(400),$('[data-alpha="'+e+'"]').addClass("active"),r=$('[data-alpha-filter="'+e+'"]').size();else{l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),i.removeClass("active"),$(".course-info, .service-info").remove();var s=e.split(",");t.each(function(a){var e=[];$(this).find(".tags span").each(function(){e.push(this)});var l=e.map(function(a){return a.textContent}),i=s.every(function(a){return 0<=l.indexOf(a)}),t=s.length;for(a=0;a<t;a++){var n=s[a];$('[data-filter="'+n+'"]').addClass("active")}i&&(r+=1,$(this).fadeIn(400))})}$(".no-results").remove(),0===r&&($('<div class="no-results">There are no results. <a href="#">VIEW ALL</a></div>').appendTo(".results"),$(".course-info, .service-info").remove(),$(".no-results a").click(function(a){a.preventDefault(),t.hide(),l.removeClass("active"),i.removeClass("active"),$('[data-alpha="all"]').addClass("active"),$('[data-filter="all"]').addClass("active"),t.fadeIn(400),$(".no-results").remove();window.location.hash="#all"}))}),clearInterval(a),$(window).trigger("hashchange"))},100)},buildWebPart:function(){thiscontainer.append('<div class="filter-toggle"><i class="fa fa-filter" aria-hidden="true"></i><span class="text">Filter</span></div><div class="filter-column col-md-3"></div>'),thiscontainer.append('<div class="learningplans-results-column col-md-9">'),$(resultsParentContainer).append('<div class="alpha-filter">'),eandsuplans.buildAlphabet(),$(resultsParentContainer).append('</div><div class="row no-gutter info-container"></div>'),$(resultsParentContainer).append('<div class="results">'),lists.getListItems({listname:"EandSU Plans",fields:"Title,Desc,Enabled,LinkURL,OpenLinkInNewWindow,JobFamily,FunctionalCommunity,CareerTrack",orderby:"Title"},function(a){for(var e=a.d.results,l=0;l<e.length;l++){var i=e[l].Title,t=e[l].Desc,n=e[l].Enabled,r=e[l].OpenLinkInNewWindow,s=i.toLowerCase().substring(0,1),o="",d='<div class="title">'+i+"</div>";if(null==t&&null==t||(o='<div class="description">'+t+"</div>"),n){if(null!=e[l].LinkURL&&null!=e[l].LinkURL){var c=e[l].LinkURL;d=r?'<div class="title"><a href="'+c+'" class="learningplan-title" target="_blank">'+i+"</a></div>":'<div class="title"><a href="'+c+'" class="learningplan-title">'+i+"</a></div>"}var h='<div class="learningplan-item" data-alpha-filter="'+s+'">'+d+o+'<div class="tags">';a="";e[l].JobFamily&&e[l].JobFamily.length&&(a+='<span class="JobFamily">'+e[l].JobFamily+"</span>",resourceJobFamily.push(e[l].JobFamily)),e[l].FunctionalCommunity&&e[l].FunctionalCommunity.length&&(a+='<span class="FunctionalCommunity">'+e[l].FunctionalCommunity+"</span>",resourceFunctionalCommunity.push(e[l].FunctionalCommunity)),e[l].CareerTrack&&e[l].CareerTrack.length&&(a+='<span class="CareerTrack">'+e[l].CareerTrack+"</span>",resourceCareerTrack.push(e[l].CareerTrack));$(resultsContainer).append(h+a+"</div></div>")}}}),$(resultsParentContainer).append("</div>"),thiscontainer.append("</div>")},buildAlphabet:function(){$(resultsNavigationContainer).append('<div class="alphabet"><ul><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div>'),$("#learningplans-container").prepend('<div class="alpha-filter"><div class="alphabet mobile-alphabet"><div class="mobile-alpha-trigger"><span class="arrow"><i class="fa fa-angle-down" aria-hidden="true"></i></span></div><ul class="mobile-alpha-list"><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div></div>')},buildRefinement:function(){resourceJobFamily.sort(),resourceFunctionalCommunity.sort(),resourceCareerTrack.sort(),$(filterParentContainer).append('<div id="all-filter" class="filter-group" class="opened"><ul class="filter-group-options"><li data-filter="all" class="active"><div class="filter-checkbox"></div><div class="filter-title">VIEW ALL</div></li></ul></div>'),$(filterParentContainer).append('<div id="job-family" class="filter-group" class="opened"><h3 class="filter-group-title">Job Family</h3><ul class="filter-group-options">'),eandsuplans.getUniqueResults(resourceJobFamily).forEach(function(a){eandsuplans.addRefinementItem(a,"job-family")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="functional-community" class="filter-group" class="opened"><h3 class="filter-group-title">Functional Community</h3><ul class="filter-group-options">'),eandsuplans.getUniqueResults(resourceFunctionalCommunity).forEach(function(a){eandsuplans.addRefinementItem(a,"functional-community")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="career-track" class="filter-group" class="opened"><h3 class="filter-group-title">Career Track</h3><ul class="filter-group-options">'),eandsuplans.getUniqueResults(resourceCareerTrack).forEach(function(a){eandsuplans.addRefinementItem(a,"career-track")}),$(filterParentContainer).append("</ul></div>")},addRefinementItem:function(a,e){$("#"+e+"> ul").append('<li data-filter="'+a+'"><div class="filter-checkbox"></div><div class="filter-title">'+a+"</div></li>")},filterResultsByAlphabet:function(){$(".mobile-alpha-trigger").click(function(){$(".mobile-alpha-list").addClass("active"),$(this).next().find("a").addClass("mobile-active")}),$(".alphabet > ul > li > a").click(function(a){a.preventDefault();var e="#"+$(this).attr("data-alpha").toLowerCase();window.location.hash=e})},filterResultsByRefinement:function(){$(".filter-toggle").click(function(){$(this).hasClass("active")?($(this).removeClass("active"),$(".filter-column").slideUp(400)):($(this).addClass("active"),$(".filter-column").slideDown(400))}),$(".filter-group > ul > li").click(function(){var a=$(this).attr("data-filter").toLowerCase(),l="all";"all"!=a&&(this.classList.toggle("active"),$('[data-filter="all"]').removeClass("active"),l="",$("[data-filter].active").each(function(a){var e=$(this).attr("data-filter");l=0<a?l.concat(","+e):l.concat(e)}));var e="#"+l;window.location.hash=e})},getUniqueResults:function(a){return a.filter(function(a,e,l){return l.indexOf(a)==e})},resetWebPart:function(){$("#learningplans-container").empty()}};
"use strict";module.exports={load:function(i){var t=$.extend(!0,{},{container:"",originalwidth:1600},i);!function(o){o(t.container).find("map");var i=o(t.container).find("area"),n=o(t.container).find("img"),r=[];o(i).each(function(i){r[i]=o(this).attr("coords"),r[i]=r[i].split(",")});var a=parseInt(o(n).width())/t.originalwidth;o(i).each(function(n){var t=[];o.each(r[n],function(i){t.push(r[n][i]*a)});t=t.join(",");o(this).attr("coords",t)}),o(window).resize(function(){var a=parseInt(o(n).width())/t.originalwidth;o(i).each(function(n){var t=[];o.each(r[n],function(i){t.push(r[n][i]*a)});t=t.join(",");o(this).attr("coords",t)})})}(jQuery)}};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities"),resourceTypeTags=[],resourceConcentrationTags=[],container="#learningplans-container",thiscontainer=$(container),resultsParentContainer=".learningplans-results-column",resultsNavigationContainer=".alpha-filter",resultsContainer=".results",filterParentContainer=".filter-column",filterContainer=".filter-group-options";module.exports={load:function(){learningplans.resetWebPart(),learningplans.buildWebPart();var a=setInterval(function(){0!=$(".learningplan-item").size()&&(learningplans.buildRefinement(),learningplans.filterResultsByAlphabet(),learningplans.filterResultsByRefinement(),$(".trimmed").each(function(){var a=$(this).height();$(this).attr("data-height",a),$(this).css("height","90px")}),$(".description-toggle-link").click(function(a){if(a.preventDefault(),$(this).hasClass("description-more-link")){var e=$(this).parent().find(".trimmed").attr("data-height");$(this).parent().find(".trimmed").animate({height:e}),$(this).prev().hide(),$(this).css("opacity","0")}else $(this).parent().animate({height:90}),$(this).closest(".description").find(".description-more-link").css("opacity","1"),$(this).closest(".description").find(".description-overlay").show()}),$(window).on("hashchange",function(a){var e=window.location.hash.replace("#","");e=decodeURIComponent(e);var l=$(".alphabet > ul > li > a"),i=$(".filter-group > ul > li"),t=$(".learningplan-item"),r=0;if(t.hide(),$(".mobile-alpha-list").removeClass("active"),$(".alphabet > ul > li > a").removeClass("mobile-active"),0===e.length||"all"===e)i.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),t.fadeIn(400),r=t.size();else if(1===e.length)i.removeClass("active"),$('[data-filter="all"]').addClass("active"),$(".course-info, .service-info").remove(),l.removeClass("active"),$('[data-alpha="all"]').removeClass("active"),$('[data-alpha-filter="'+e+'"]').fadeIn(400),$('[data-alpha="'+e+'"]').addClass("active"),r=$('[data-alpha-filter="'+e+'"]').size();else{l.removeClass("active"),$('[data-alpha="all"]').addClass("active"),i.removeClass("active"),$(".course-info, .service-info").remove();var s=e.split(",");t.each(function(a){var e=[];$(this).find(".tags span").each(function(){e.push(this)});var l=e.map(function(a){return a.textContent}),i=s.every(function(a){return 0<=l.indexOf(a)}),t=s.length;for(a=0;a<t;a++){var n=s[a];$('[data-filter="'+n+'"]').addClass("active")}i&&(r+=1,$(this).fadeIn(400))}),s.includes("Course")&&$('<div class="course-info col-sm-6">To enroll in a course:<br/><ol><li>Go to <a href="http://learn.bah.com" target="_blank">Learn</a> (http://learn.bah.com)</li><li>Search for the course by code or title in the <strong>Search for Learning</strong> field</li><li>Click on the course title and follow prompts</li></ol><br/><br/></div>').prependTo(".info-container"),s.includes("Service Based Learning Plan")&&$('<div class="service-info col-sm-6">To enroll in a Service-based Learning Plan:<br/><ol><li>Go to <a href="http://learn.bah.com" target="_blank">Learn</a> (http://learn.bah.com)</li><li>Click on the <strong>Learning Plans</strong> box</li><li>Click the <strong>Service Based Learning Plans</strong> option</li><li>Click on the <strong>+Add Plan</strong> box to register</li></ol><br/><br/></div>').appendTo(".info-container")}$(".no-results").remove(),0===r&&($('<div class="no-results">There are no results. <a href="#">VIEW ALL</a></div>').appendTo(".results"),$(".course-info, .service-info").remove(),$(".no-results a").click(function(a){a.preventDefault(),t.hide(),l.removeClass("active"),i.removeClass("active"),$('[data-alpha="all"]').addClass("active"),$('[data-filter="all"]').addClass("active"),t.fadeIn(400),$(".no-results").remove();window.location.hash="#all"}))}),clearInterval(a),$(window).trigger("hashchange"))},100)},buildWebPart:function(){thiscontainer.append('<div class="filter-toggle"><i class="fa fa-filter" aria-hidden="true"></i><span class="text">Filter</span></div><div class="filter-column col-md-3"></div>'),thiscontainer.append('<div class="learningplans-results-column col-md-9">'),$(resultsParentContainer).append('<div class="alpha-filter">'),learningplans.buildAlphabet(),$(resultsParentContainer).append('</div><div class="row no-gutter info-container"></div>'),$(resultsParentContainer).append('<div class="results">'),lists.getListItems({listname:"Learning Plans and Courses",fields:"Title,Desc,HTMLDescription,Enabled,LinkURL,Id,OpenLinkInNewWindow,CourseID,ResourceType,ResourceConcentration",orderby:"Title"},function(a){for(var e=a.d.results,l=0;l<e.length;l++){var i=e[l].Title,t=e[l].Desc,n=e[l].HTMLDescription,r=e[l].Enabled,s=(e[l].Id,e[l].OpenLinkInNewWindow),o=e[l].CourseID,d="";null==o&&null==o||(d='<div class="course-id">'+o+"</div>");var c=i.toLowerCase().substring(0,1),h="",p='<div class="title">'+i+"</div>";if(null!=t||null!=t)h='<div class="description">'+t+"</div>";else if(null!=n||null!=n){var f=$("<div>"+n+"</div>").text().trim().replace(/\u200B/g,"").replace(/ /g,"").length;0!=f&&(h=300<f?'<div class="description"><div class="desc-inner trimmed">'+n+'<br/><a href="#" class="description-less-link description-toggle-link">View Less</a></div><div class="description-overlay"></div><a href="#" class="description-more-link description-toggle-link">View More</a></div>':'<div class="description">'+n+"</div>")}if(r){if(null!=e[l].LinkURL&&null!=e[l].LinkURL){var u=e[l].LinkURL.Url;p=s?'<div class="title"><a href="'+u+'" class="learningplan-title" target="_blank">'+i+"</a></div>":'<div class="title"><a href="'+u+'" class="learningplan-title">'+i+"</a></div>"}var v='<div class="learningplan-item" data-alpha-filter="'+c+'">'+p+d+h+'<div class="tags">';a="";if(1<=e[l].ResourceType.results.length&&null!=e[l].ResourceType.results)for(var g=e[l].ResourceType.results,m=0;m<g.length;m++){var C=g[m].Label;a+='<span class="type">'+C+"</span>",resourceTypeTags.push(C)}if(1<=e[l].ResourceConcentration.results.length&&null!=e[l].ResourceConcentration.results){var b=e[l].ResourceConcentration.results;for(m=0;m<b.length;m++){var L=b[m].Label;a+='<span class="concentration">'+L+"</span>",resourceConcentrationTags.push(L)}}$(resultsContainer).append(v+a+"</div></div>")}}}),$(resultsParentContainer).append("</div>"),thiscontainer.append("</div>")},buildAlphabet:function(){$(resultsNavigationContainer).append('<div class="alphabet"><ul><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div>'),$("#learningplans-container").prepend('<div class="alpha-filter"><div class="alphabet mobile-alphabet"><div class="mobile-alpha-trigger"><span class="arrow"><i class="fa fa-angle-down" aria-hidden="true"></i></span></div><ul class="mobile-alpha-list"><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div></div>')},buildRefinement:function(){resourceTypeTags.sort(),resourceConcentrationTags.sort(),$(filterParentContainer).append('<div id="all-filter" class="filter-group" class="opened"><ul class="filter-group-options"><li data-filter="all" class="active"><div class="filter-checkbox"></div><div class="filter-title">VIEW ALL</div></li></ul></div>'),$(filterParentContainer).append('<div id="resource-type" class="filter-group" class="opened"><h3 class="filter-group-title">Resource Type</h3><ul class="filter-group-options">'),learningplans.getUniqueResults(resourceTypeTags).forEach(function(a){learningplans.addRefinementItem(a,"resource-type")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="concentration" class="filter-group" class="opened"><h3 class="filter-group-title">Department</h3><ul class="filter-group-options">'),learningplans.getUniqueResults(resourceConcentrationTags).forEach(function(a){learningplans.addRefinementItem(a,"concentration")}),$(filterParentContainer).append("</ul></div>")},addRefinementItem:function(a,e){$("#"+e+"> ul").append('<li data-filter="'+a+'"><div class="filter-checkbox"></div><div class="filter-title">'+a+"</div></li>")},filterResultsByAlphabet:function(){$(".mobile-alpha-trigger").click(function(){$(".mobile-alpha-list").addClass("active"),$(this).next().find("a").addClass("mobile-active")}),$(".alphabet > ul > li > a").click(function(a){a.preventDefault();var e="#"+$(this).attr("data-alpha").toLowerCase();window.location.hash=e})},filterResultsByRefinement:function(){$(".filter-toggle").click(function(){$(this).hasClass("active")?($(this).removeClass("active"),$(".filter-column").slideUp(400)):($(this).addClass("active"),$(".filter-column").slideDown(400))}),$(".filter-group > ul > li").click(function(){var a=$(this).attr("data-filter").toLowerCase(),l="all";"all"!=a&&(this.classList.toggle("active"),$('[data-filter="all"]').removeClass("active"),l="",$("[data-filter].active").each(function(a){var e=$(this).attr("data-filter");l=0<a?l.concat(","+e):l.concat(e)}));var e="#"+l;window.location.hash=e})},getUniqueResults:function(a){return a.filter(function(a,e,l){return l.indexOf(a)==e})},resetWebPart:function(){$("#learningplans-container").empty()}};
"use strict";var utilities=window.utilities=require("./utilities");module.exports={getListItems:function(e,t,i){var n=$.extend(!0,{},{listname:"",siteurl:bones.web.url,fields:"",orderby:"Title",orderdirection:"asc",expand:"",limit:500},e);$.ajax({type:"GET",headers:{accept:"application/json;odata=verbose","X-RequestDigest":bones.digest},url:n.siteurl+"/_api/web/lists/getbytitle('"+n.listname+"')/Items?$top="+n.limit+"&$orderby="+n.orderby+" "+n.orderdirection+"&$select="+n.fields+"&$expand="+n.expand,success:function(e){t(e)},error:function(e){}})},getListFieldValuesHTML:function(e,i,t){var n=$.extend(!0,{},{listname:"",siteurl:bones.web.url,id:"",fields:""},e);return $.ajax({type:"GET",headers:{accept:"application/json;odata=verbose","X-RequestDigest":bones.digest},url:n.siteurl+"/_api/web/lists/getbytitle('"+n.listname+"')/Items("+n.id+")/FieldValuesAsHTML?$select="+n.fields,success:function(e,t){i(e,n.id)},error:function(e){}})},createLists:function(e){var t=$.extend(!0,{},{listName:"",siteUrl:bones.web.url,description:""},e);new SP.RequestExecutor(t.siteUrl).executeAsync({url:t.siteUrl+"/_api/web/Lists",method:"POST",body:"{ '__metadata': { 'type': 'SP.List' }, 'AllowContentTypes': true, 'ContentTypesEnabled': true, 'BaseTemplate': 100, 'Description': '"+t.listName+"', 'Title':'"+t.listName+"'}",headers:{"content-type":"application/json; odata=verbose"},success:function(e){},error:function(e,t,i){}})},addContentTypeToList:function(e){var t=$.extend(!0,{},{listName:"",siteUrl:bones.web.url,contentTypeId:""},e);new SP.RequestExecutor(t.siteUrl).executeAsync({url:t.siteUrl+"/_api/web/lists/getbytitle('"+t.listName+"')/ContentTypes/AddAvailableContentType",method:"POST",body:JSON.stringify({contentTypeId:t.contentTypeId}),headers:{"content-type":"application/json; odata=verbose"},success:function(e){},error:function(e,t,i){}})},getITEMContentType:function(e,t){var i=$.extend(!0,{},{listname:"",siteurl:bones.web.url},e);$.ajax({type:"GET",headers:{accept:"application/json;odata=verbose","X-RequestDigest":bones.digest},url:i.siteurl+"/_api/web/lists/getbytitle('"+i.listname+"')/ContentTypes?$select=Name,id&$filter=Name eq %27Item%27",success:function(e){t(e)},error:function(e){}})},removeContentTypeFromList:function(e){var t=$.extend(!0,{},{listName:"",siteUrl:bones.web.url,contentTypeId:""},e);new SP.RequestExecutor(t.siteUrl).executeAsync({url:t.siteUrl+"/_api/web/lists/getbytitle('"+t.listName+"')/ContentTypes('"+t.contentTypeId+"')/deleteObject()",method:"POST",headers:{"content-type":"application/json; odata=verbose"},success:function(e){},error:function(e,t,i){}})},createListWithContentType:function(e,t,i,n){var s=$.extend(!0,{},{listName:"",siteUrl:bones.web.url,description:"",contentTypeId:""},e);new SP.RequestExecutor(s.siteUrl).executeAsync({url:s.siteUrl+"/_api/web/Lists",method:"POST",body:"{ '__metadata': { 'type': 'SP.List' }, 'AllowContentTypes': true, 'ContentTypesEnabled': true, 'BaseTemplate': 100, 'Description': '"+s.description+"', 'Title':'"+s.listName+"'}",headers:{"content-type":"application/json; odata=verbose"},success:function(e){"Created"==e.statusText&&t.text("Configuring content type..."),setTimeout(function(){new SP.RequestExecutor(s.siteUrl).executeAsync({url:s.siteUrl+"/_api/web/lists/getbytitle('"+s.listName+"')/ContentTypes/AddAvailableContentType",method:"POST",body:JSON.stringify({contentTypeId:s.contentTypeId}),headers:{"content-type":"application/json; odata=verbose"},success:function(e){setTimeout(function(){lists.getITEMContentType({listname:s.listName},function(e){var t=e.d.results;new SP.RequestExecutor(s.siteUrl).executeAsync({url:s.siteUrl+"/_api/web/lists/getbytitle('"+s.listName+"')/ContentTypes('"+t[0].Id.StringValue+"')/deleteObject()",method:"POST",headers:{"content-type":"application/json; odata=verbose"},success:function(e){},error:function(e,t,i){}})})},2e3)},error:function(e,t,i){}}),"error"!=status&&(n.val(s.listName),n.trigger("change")),i.remove()},5e3)},error:function(e,t,i){}})},addColumnToList:function(e){var t=$.extend(!0,{},{listName:"",siteUrl:bones.web.url,fieldType:"",fieldTitle:"",fieldDisplayName:""},e);new SP.RequestExecutor(t.siteUrl).executeAsync({url:t.siteUrl+"/_api/web/lists/getbytitle('"+t.listName+"')/fields",method:"POST",body:"{'__metadata': { 'type': 'SP.Field' }, 'FieldTypeKind': "+t.fieldType+", 'Title': '"+t.fieldTitle+"', 'Description': '"+t.fieldDisplayName+"'}",headers:{"content-type":"application/json;odata=verbose"},success:function(e){},error:function(e,t,i){}})},buildwebpart:function(e){var o=$.extend(!0,{},{trigger:"",container:""},e);$(o.trigger).each(function(e){var t=$(this),i=t.parent(),n=i.next(o.container);if(!n.size()){var s=o.container.substring(o.container.indexOf(".")+1);n=$('<div class="'+s+'"></div>'),i.after(n)}i.hide();var a="";if(t.is("[data-list]")&&(a=t.attr("data-list")),bones.page.editmode&&!n.children(".edit-mode-panel").size()&&(i.removeAttr("contenteditable").removeAttr("contenteditor"),i.parent().removeAttr("rteredirect"),n.append('<div class="edit-mode-panel"><div class="ms-formfieldlabelcontainer">List</div><div class="ms-formfieldvaluecontainer"><input class="webpart-list" type="text" value="'+a+'"/></div></div>')),n.find(".list-edit").remove(),a.length&&bones.page.editmode){var r=$('<button class="btn btn-sm list-edit" title="Add and edit links in this list"><i class="fa fa-pencil" aria-hidden="true"></i></button>');r.on("click",function(e){e.preventDefault(),function i(){SP.UI.ModalDialog.showModalDialog({url:bones.web.url+"/Lists/"+a,autoSize:!0,dialogReturnValueCallback:function(e,t){e==SP.UI.DialogResult.OK&&i(),SP.UI.DialogResult.cancel}})}()}),n.find("input.webpart-list").after(r)}})},editwebpart:function(e){var a=$.extend(!0,{},{trigger:"",container:"",contenttypeid:"",removecontenttypeid:""},e);$(a.container).find("input.webpart-list").each(function(){var s=$(this);s.val().trim(),s.on("change",function(){s.closest(a.container).prev("div").find(a.trigger).attr("data-list",$(this).val()),lists.buildwebpart({trigger:a.trigger,container:a.container})});var e=$('<button class="btn btn-sm webpart-list-create" title="Create a new list"><i class="fa fa-plus" aria-hidden="true"></i></button>');s.parent().append(e),e.on("click",function(e){if(e.preventDefault(),0<$(this).next(".webpart-form").size())$(this).next(".webpart-form").remove();else{var n=$('<div class="webpart-form"><input type="text" placeholder="New List Name"><button class="btn btn-sm">Create</button></div>');$(this).after(n),n.children("button").on("click",function(e){if(e.preventDefault(),!$(this).is("[disabled]")){var t=$(this);t.attr("disabled","disabled").text("Creating list...");var i=$(this).prev("input").val().trim();(i=i.replace(/[^A-Z|a-z|\d|\s]/g,"")).length?lists.createListWithContentType({listName:i,description:i,contentTypeId:a.contenttypeid,removeContentTypeId:a.removecontenttypeid},t,n,s):n.remove()}})}})})}};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities");module.exports={load:function(e){var g,u=$.extend(!0,{},{trigger:".wp-news",container:".news-container",contenttypeid:"0x0100AEA90137ECD81349B17DB7219FE344CD"},e);g=jQuery,lists.buildwebpart({trigger:u.trigger,container:u.container}),g(u.container).each(function(){var w=g(this);w.find("ul").remove();var v=w.closest(".ms-webpartzone-cell").find(u.trigger).attr("data-list");bones.page.editmode||lists.getListItems({listname:v,fields:"Title,Enabled,CallToAction,SortOrder,Excerpt,Id,OpenLinkInNewWindow",orderby:"SortOrder"},function(e){var i=e.d.results;w.append("<ul/>");for(var s=w.find("ul"),n=0;n<i.length;n++){var t=i[n].Title,l=i[n].Enabled,a=i[n].Excerpt,d=i[n].Id,r=i[n].OpenLinkInNewWindow;if(null===i[n].Excerpt&&(a=""),l)if(null!=i[n].CallToAction&&null!=i[n].CallToAction){var o=i[n].CallToAction.Description,c=i[n].CallToAction.Url;r?s.append('<li class="news-slide row no-gutter"><div class="news-slide-image news-image-'+d+' col-sm-7"></div><div class="news-slide-content col-sm-5"><h1>News & Announcements</h1><div class="news-slide-title">'+t+'</div><div class="news-slide-excerpt">'+a+'</div><div class="news-slide-btn"><a href="'+c+'" class="bah-cta" target="_blank">'+o+"</a></div></div></li>"):s.append('<li class="news-slide row no-gutter"><div class="news-slide-image news-image-'+d+' col-sm-7"></div><div class="news-slide-content col-sm-5"><h1>News & Announcements</h1><div class="news-slide-title">'+t+'</div><div class="news-slide-excerpt">'+a+'</div><div class="news-slide-btn"><a href="'+c+'" class="bah-cta">'+o+"</a></div></div></li>")}else s.append('<li class="news-slide row no-gutter"><div class="news-slide-image news-image-'+d+' col-sm-7"></div><div class="news-slide-content col-sm-5"><h1>News & Announcements</h1><div class="news-slide-title">'+t+'</div><div class="news-slide-excerpt">'+a+"</div></div></li>");lists.getListFieldValuesHTML({listname:v,fields:"BAHImage",id:d},function(e,s){var n=e.d.BAHImage,t=setInterval(function(){if(n&&g(n)&&g(n)[0]&&0!=g(n)[0].width){var e=g(n)[0].width/g(n)[0].height,i=w.find(".news-image-"+s).width()/w.find(".news-image-"+s).height();w.find(".news-image-"+s).append(n),i<e?w.find(".news-image-"+s+" img").width("auto").height("100%"):w.find(".news-image-"+s+" img").width("100%").height("auto"),clearInterval(t)}},100)})}g(u.container).carousel({loop:!0,navigation:!0,autoplay:!0})})}),lists.editwebpart({trigger:u.trigger,container:u.container,contenttypeid:u.contenttypeid})}};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities"),partnershipTags=[],concentrationTags=[],technologyTags=[],certificationTags=[],degreeTags=[],container="#partnership-container",thiscontainer=$(container),resultsParentContainer=".partnership-results-column",resultsNavigationContainer=".alpha-filter",resultsContainer=".results",filterParentContainer=".filter-column",filterContainer=".filter-group-options";module.exports={load:function(){partnerships.resetWebPart(),partnerships.buildWebPart();var a=setInterval(function(){0!=$(".partnership-item").size()&&(partnerships.buildRefinement(),partnerships.filterResultsByAlphabet(),partnerships.filterResultsByRefinement(),$(".trimmed").each(function(){var a=$(this).height();$(this).attr("data-height",a),$(this).css("height","90px")}),$(".description-toggle-link").click(function(a){if(a.preventDefault(),$(this).hasClass("description-more-link")){var e=$(this).parent().find(".trimmed").attr("data-height");$(this).parent().find(".trimmed").animate({height:e}),$(this).prev().hide(),$(this).css("opacity","0")}else $(this).parent().animate({height:90}),$(this).closest(".description").find(".description-more-link").css("opacity","1"),$(this).closest(".description").find(".description-overlay").show()}),$(window).on("hashchange",function(a){var e=window.location.hash.replace("#","");e=decodeURIComponent(e);var i=$(".alphabet > ul > li > a"),t=$(".filter-group > ul > li"),l=$(".partnership-item"),s=0;if(l.hide(),$(".mobile-alpha-list").removeClass("active"),$(".alphabet > ul > li > a").removeClass("mobile-active"),0===e.length||"all"===e)t.removeClass("active"),$('[data-filter="all"]').addClass("active"),i.removeClass("active"),$('[data-alpha="all"]').addClass("active"),l.fadeIn(400),s=l.size();else if(1===e.length)t.removeClass("active"),$('[data-filter="all"]').addClass("active"),i.removeClass("active"),$('[data-alpha="all"]').removeClass("active"),$('[data-alpha-filter="'+e+'"]').fadeIn(400),$('[data-alpha="'+e+'"]').addClass("active"),s=$('[data-alpha-filter="'+e+'"]').size();else{i.removeClass("active"),$('[data-alpha="all"]').addClass("active"),t.removeClass("active");var n=e.split(",");l.each(function(a){var e=[];$(this).find(".tags span").each(function(){e.push(this)});var i=e.map(function(a){return a.textContent}),t=n.every(function(a){return 0<=i.indexOf(a)}),l=n.length;for(a=0;a<l;a++){var r=n[a];$('[data-filter="'+r+'"]').addClass("active")}t&&(s+=1,$(this).fadeIn(400))})}$(".no-results").remove(),0===s&&($('<div class="no-results">There are no results. <a href="#">VIEW ALL</a></div>').appendTo(".results"),$(".no-results a").click(function(a){a.preventDefault(),l.hide(),i.removeClass("active"),t.removeClass("active"),$('[data-alpha="all"]').addClass("active"),$('[data-filter="all"]').addClass("active"),l.fadeIn(400),$(".no-results").remove();window.location.hash="#all"}))}),clearInterval(a),$(window).trigger("hashchange"))},100)},buildWebPart:function(){thiscontainer.append('<div class="filter-toggle"><i class="fa fa-filter" aria-hidden="true"></i><span class="text">Filter</span></div><div class="filter-column col-md-3"></div>'),thiscontainer.append('<div class="partnership-results-column col-md-9">'),$(resultsParentContainer).append('<div class="alpha-filter">'),partnerships.buildAlphabet(),$(resultsParentContainer).append("</div>"),$(resultsParentContainer).append('<div class="results">'),lists.getListItems({listname:"Partnerships",fields:"Title,Desc,HTMLDescription,Enabled,LinkURL,Certification,Concentration,Degree,PartnershipType,Technology,Id,OpenLinkInNewWindow",orderby:"Title"},function(a){for(var e=a.d.results,i=0;i<e.length;i++){var t=e[i].Title,l=e[i].Desc,r=e[i].HTMLDescription,s=e[i].Enabled,n=(e[i].Id,e[i].OpenLinkInNewWindow),p=t.toLowerCase().substring(0,1),h="",o='<div class="title">'+t+"</div>";if(null!=l||null!=l)h='<div class="description">'+l+"</div>";else if(null!=r||null!=r){var d=$("<div>"+r+"</div>").text().trim().replace(/\u200B/g,"").replace(/ /g,"").length;0!=d&&(h=300<d?'<div class="description"><div class="desc-inner trimmed">'+r+'<br/><a href="#" class="description-less-link description-toggle-link">View Less</a></div><div class="description-overlay"></div><a href="#" class="description-more-link description-toggle-link">View More</a></div>':'<div class="description">'+r+"</div>")}if(s){if(null!=e[i].LinkURL&&null!=e[i].LinkURL){var c=e[i].LinkURL.Url;o=n?'<div class="title"><a href="'+c+'" class="partnership-title" target="_blank">'+t+"</a></div>":'<div class="title"><a href="'+c+'" class="partnership-title">'+t+"</a></div>"}var f='<div class="partnership-item" data-alpha-filter="'+p+'">'+o+h+'<div class="tags">';a="";if(1<=e[i].PartnershipType.results.length&&null!=e[i].PartnershipType.results)for(var u=e[i].PartnershipType.results,v=0;v<u.length;v++){var g=u[v].Label;a+="<span>"+g+"</span>",partnershipTags.push(g)}if(1<=e[i].Concentration.results.length&&null!=e[i].Concentration.results)for(v=0;v<e[i].Concentration.results.length;v++){var m=e[i].Concentration.results[v].Label;a+="<span>"+m+"</span>",concentrationTags.push(m)}if(1<=e[i].Technology.results.length&&null!=e[i].Technology.results)for(v=0;v<e[i].Technology.results.length;v++){var C=e[i].Technology.results[v].Label;a+="<span>"+C+"</span>",technologyTags.push(C)}if(1<=e[i].Certification.results.length&&null!=e[i].Certification.results)for(v=0;v<e[i].Certification.results.length;v++){var b=e[i].Certification.results[v].Label;a+="<span>"+b+"</span>",certificationTags.push(b)}if(1<=e[i].Degree.results.length&&null!=e[i].Degree.results)for(v=0;v<e[i].Degree.results.length;v++){var T=e[i].Degree.results[v].Label;a+="<span>"+T+"</span>",degreeTags.push(T)}$(resultsContainer).append(f+a+"</div></div>")}}}),$(resultsParentContainer).append("</div>"),thiscontainer.append("</div>")},buildAlphabet:function(){$(resultsNavigationContainer).append('<div class="alphabet"><ul><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div>'),$("#partnership-container").prepend('<div class="alpha-filter"><div class="alphabet mobile-alphabet"><div class="mobile-alpha-trigger"><span class="arrow"><i class="fa fa-angle-down" aria-hidden="true"></i></span></div><ul class="mobile-alpha-list"><li><a href="#" data-alpha="all" class="active">All</a></li><li><a href="#" data-alpha="a">A</a></li><li><a href="#" data-alpha="b">B</a></li><li><a href="#" data-alpha="c">C</a></li><li><a href="#" data-alpha="d">D</a></li><li><a href="#" data-alpha="e">E</a></li><li><a href="#" data-alpha="f">F</a></li><li><a href="#" data-alpha="g">G</a></li><li><a href="#" data-alpha="h">H</a></li><li><a href="#" data-alpha="i">I</a></li><li><a href="#" data-alpha="j">J</a></li><li><a href="#" data-alpha="k">K</a></li><li><a href="#" data-alpha="l">L</a></li><li><a href="#" data-alpha="m">M</a></li><li><a href="#" data-alpha="n">N</a></li><li><a href="#" data-alpha="o">O</a></li><li><a href="#" data-alpha="p">P</a></li><li><a href="#" data-alpha="q">Q</a></li><li><a href="#" data-alpha="r">R</a></li><li><a href="#" data-alpha="s">S</a></li><li><a href="#" data-alpha="t">T</a></li><li><a href="#" data-alpha="u">U</a></li><li><a href="#" data-alpha="v">V</a></li><li><a href="#" data-alpha="w">W</a></li><li><a href="#" data-alpha="x">X</a></li><li><a href="#" data-alpha="y">Y</a></li><li><a href="#" data-alpha="z">Z</a></li></ul></div></div>')},buildRefinement:function(){partnershipTags.sort(),concentrationTags.sort(),technologyTags.sort(),certificationTags.sort(),degreeTags.sort(),$(filterParentContainer).append('<div id="all-filter" class="filter-group" class="opened"><ul class="filter-group-options"><li data-filter="all" class="active"><div class="filter-checkbox"></div><div class="filter-title">VIEW ALL</div></li></ul></div>'),$(filterParentContainer).append('<div id="partnership-type" class="filter-group" class="opened"><h3 class="filter-group-title">Partnership Type</h3><ul class="filter-group-options">'),partnerships.getUniqueResults(partnershipTags).forEach(function(a){partnerships.addRefinementItem(a,"partnership-type")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="concentration" class="filter-group" class="opened"><h3 class="filter-group-title">Concentration</h3><ul class="filter-group-options">'),partnerships.getUniqueResults(concentrationTags).forEach(function(a){partnerships.addRefinementItem(a,"concentration")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="technology" class="filter-group" class="opened"><h3 class="filter-group-title">Technology</h3><ul class="filter-group-options">'),partnerships.getUniqueResults(technologyTags).forEach(function(a){partnerships.addRefinementItem(a,"technology")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="certification" class="filter-group" class="opened"><h3 class="filter-group-title">Certification</h3><ul class="filter-group-options">'),partnerships.getUniqueResults(certificationTags).forEach(function(a){partnerships.addRefinementItem(a,"certification")}),$(filterParentContainer).append("</ul></div>"),$(filterParentContainer).append('<div id="degree" class="filter-group" class="opened"><h3 class="filter-group-title">Degree</h3><ul class="filter-group-options">'),partnerships.getUniqueResults(degreeTags).forEach(function(a){partnerships.addRefinementItem(a,"degree")}),$(filterParentContainer).append("</ul></div>")},addRefinementItem:function(a,e){$("#"+e+"> ul").append('<li data-filter="'+a+'"><div class="filter-checkbox"></div><div class="filter-title">'+a+"</div></li>")},filterResultsByAlphabet:function(){$(".mobile-alpha-trigger").click(function(){$(".mobile-alpha-list").addClass("active"),$(this).next().find("a").addClass("mobile-active")}),$(".alphabet > ul > li > a").click(function(a){a.preventDefault();var e="#"+$(this).attr("data-alpha").toLowerCase();window.location.hash=e})},filterResultsByRefinement:function(){$(".filter-toggle").click(function(){$(this).hasClass("active")?($(this).removeClass("active"),$(".filter-column").slideUp(400)):($(this).addClass("active"),$(".filter-column").slideDown(400))}),$(".filter-group > ul > li").click(function(){var a=$(this).attr("data-filter").toLowerCase(),i="all";"all"!=a&&(this.classList.toggle("active"),$('[data-filter="all"]').removeClass("active"),i="",$("[data-filter].active").each(function(a){var e=$(this).attr("data-filter");i=0<a?i.concat(","+e):i.concat(e)}));var e="#"+i;window.location.hash=e})},getUniqueResults:function(a){return a.filter(function(a,e,i){return i.indexOf(a)==e})},resetWebPart:function(){$("#partnership-container").empty()}};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities");module.exports={load:function(e){var i,s=$.extend(!0,{},{trigger:".wp-resources",container:".resources-container",contenttypeid:"0x0100B038C6A9EF4F10468708A64AC9289D8F"},e);i=jQuery,lists.buildwebpart({trigger:s.trigger,container:s.container}),i(s.container).each(function(){var o=i(this);if(o.children(".resource-items").remove(),0<o.closest(".ms-webpartzone-cell").find(".ms-webpart-chrome-title").size()){var e=o.closest(".ms-webpartzone-cell").find(".js-webpart-titleCell").attr("title").split(" - ")[1];0<e.length&&o.closest(".ms-webpartzone-cell").find("h2.ms-webpart-titleText").append('<div class="webpart-description">'+e)}var u=o.closest(".ms-webpartzone-cell").find(s.trigger).attr("data-list");bones.page.editmode||lists.getListItems({listname:u,fields:"Title,Desc,Enabled,LinkURL,SortOrder,Id,OpenLinkInNewWindow",orderby:"SortOrder"},function(e){for(var i=e.d.results,s=o,r=0;r<i.length;r++){var t=i[r].Title,l=i[r].Desc,n=i[r].Enabled,a=i[r].Id,c=i[r].OpenLinkInNewWindow;if(null===i[r].Desc&&(l=""),n)if(null!=i[r].LinkURL&&null!=i[r].LinkURL){var d=i[r].LinkURL.Url;c?s.append('<a href="'+d+'" class="resource-item" target="_blank"><div class="resource-image resource-image-'+a+'"></div><div class="resource-content"><h2 class="resource-title">'+t+'</h2><div class="resource-desc">'+l+"</div></div></a>"):s.append('<a href="'+d+'" class="resource-item"><div class="resource-image resource-image-'+a+'"></div><div class="resource-content"><h2 class="resource-title">'+t+'</h2><div class="resource-desc">'+l+"</div></div></a>")}else s.append('<div class="resource-item"><div class="resource-image resource-image-'+a+'"></div><div class="resource-content"><h2 class="resource-title">'+t+'</h2><div class="resource-desc">'+l+"</div></div></div>");lists.getListFieldValuesHTML({listname:u,fields:"ThumbnailImage",id:a},function(e,i){var s=e.d.ThumbnailImage;null!=s&&o.find(".resource-image-"+i).append(s)})}})}),lists.editwebpart({trigger:s.trigger,container:s.container,contenttypeid:s.contenttypeid})}};
"use strict";!function(v){v.fn.tabify=function(e){var f=v.extend(!0,{},{selector:this.selector,enabled:"1"!=v("#MSOLayout_InDesignMode").val(),panel:".ms-webpartzone-cell",container:".ms-webpart-zone",title:"h2.ms-webpart-titleText:eq(0)",hidetitles:!1,cssclass:"ui-tabs",reversez:!1,oninit:!1,onchange:!1,destroy:!1},e);return this.each(function(){var d=v(this).closest(f.panel),o=d.closest(f.container);f.destroy?o.trigger("tabify-destroy"):(o.on("tabify-init",function(){o.addClass(f.cssclass);var c=v('<ul class="'+f.cssclass+'-nav" />'),r=0;if(o.find(f.panel).each(function(e){var s=v(this);if(s.is(d))s.addClass(f.cssclass+"-hidden");else{s.addClass(f.cssclass+"-panel");var a="panel"+(e+1);s.attr("id",a);var i="No title",t=s.find(f.title);if(0<t.size()){var n=t.text();0<n.length&&(i=n),f.hidetitles&&t.addClass(f.cssclass+"-hidden")}var l=v('<li><a href="#'+a+'"><span>'+i+"</span></a></li>");l.children("a").on("click",function(e){e.preventDefault();var s=v(this).attr("href");o.trigger("tabify-change",[s])}),0==r&&(s.addClass("active"),l.addClass("active"),r++),c.append(l)}}),f.reversez){var s=c.children("li");s.each(function(e){v(this).css("z-index",s.size()-e)})}o.prepend(c),"function"==typeof f.oninit&&f.oninit()}),o.on("tabify-change",function(e,s){o.children("ul:eq(0)").children("li").removeClass("active"),o.find(f.panel).removeClass("active"),o.find('a[href="'+s+'"]').parent("li").addClass("active"),v(s).addClass("active")}),o.on("tabify-destroy",function(){o.removeClass(f.cssclass),o.find(f.panel).removeAttr("id").removeClass(f.cssclass+"-panel active"),o.children("ul:eq(0)").remove()}),f.enabled&&o.trigger("tabify-init"))}),this}}(jQuery);
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities");module.exports={load:function(e){var i,s=$.extend(!0,{},{trigger:".wp-tiles",container:".tiles-container",contenttypeid:"0x01006EE6A902D00DD140999A126BFDF9EEEA"},e);i=jQuery,lists.buildwebpart({trigger:s.trigger,container:s.container}),i(s.container).each(function(){var p=i(this);if(0<p.closest(".ms-webpartzone-cell").find(".ms-webpart-chrome-title").size()){var e=p.closest(".ms-webpartzone-cell").find(".js-webpart-titleCell").attr("title").split(" - ")[1];0<e.length&&p.closest(".ms-webpartzone-cell").find("h2.ms-webpart-titleText").append('<div class="webpart-description">'+e)}p.children("a.tiles-link").remove();var t=p.closest(".ms-webpartzone-cell").find(s.trigger).attr("data-list");bones.page.editmode||lists.getListItems({listname:t,fields:"Title,Enabled,LinkURL,SortOrder,Desc,OpenLinkInNewWindow",orderby:"SortOrder"},function(e){for(var t=e.d.results,i=p,s=0;s<t.length;s++){var l=t[s].Title,n=t[s].Desc,a=t[s].Enabled,r=t[s].LinkURL,c=t[s].OpenLinkInNewWindow;null===t[s].Desc&&(n=""),a&&(c?i.append('<a href="'+r.Url+'" alt="'+l+'" class="tiles-link tiles-link-'+s%6+'" target="_blank"><span class="tiles-link-text"><span class="tiles-link-title">'+l+'</span><span class="tiles-link-desc">'+n+"</span></span></a>"):i.append('<a href="'+r.Url+'" alt="'+l+'" class="tiles-link tiles-link-'+s%6+'"><span class="tiles-link-text"><span class="tiles-link-title">'+l+'</span><span class="tiles-link-desc">'+n+"</span></span></a>"))}})}),lists.editwebpart({trigger:s.trigger,container:s.container,contenttypeid:s.contenttypeid})}};
"use strict";var lists=window.lists=require("./lists"),utilities=window.utilities=require("./utilities");module.exports={load:function(e){var i,t=$.extend(!0,{},{trigger:".wp-universities",container:".universities-container",contenttypeid:"0x01009E2AB436042E524F87C729D9C0C55549"},e);i=jQuery,lists.buildwebpart({trigger:t.trigger,container:t.container}),i(t.container).each(function(){var u=i(this);u.find(".container").remove();var e=u.closest(".ms-webpartzone-cell").find(t.trigger).attr("data-list");bones.page.editmode||lists.getListItems({listname:e,fields:"Title,Enabled,LinkURL,SortOrder,ComingSoon,OpenLinkInNewWindow",orderby:"SortOrder"},function(e){if(0<u.closest(".ms-webpartzone-cell").find(".ms-webpart-chrome-title").size()){u.closest(".ms-webpartzone-cell").find(".ms-webpart-chrome-title").hide();var i=u.closest(".ms-webpartzone-cell").find(".js-webpart-titleCell").attr("title").split(" - ")[0],t=u.closest(".ms-webpartzone-cell").find(".js-webpart-titleCell").attr("title").split(" - ")[1];if("untitled"!=i.toLowerCase())if(null!=t)var n="<h1>"+i+'</h1><div class="university-description">'+t+"</div>";else n="<h1>"+i+"</h1>";else n=""}else n="<h1>Functional Universities</h1>";var s=e.d.results;u.append('<div class="container">'+n+"<ul/></div>");for(var l=u.find("ul"),r=0;r<s.length;r++){var a=s[r].Title,o=s[r].Enabled,c=s[r].LinkURL,d=s[r].ComingSoon,p=s[r].OpenLinkInNewWindow;o&&(d?l.append('<li class="university-link"><span class="disabled"><span class="university-link-text">'+a+'<span class="coming-soon-text">Coming Soon</span></span></span></li>'):p?l.append('<li class="university-link"><a href="'+c.Url+'" alt="'+a+'" target="_blank"><span class="university-link-text">'+a+"</span></a></li>"):l.append('<li class="university-link"><a href="'+c.Url+'" alt="'+a+'"><span class="university-link-text">'+a+"</span></a></li>"))}})}),lists.editwebpart({trigger:t.trigger,container:t.container,contenttypeid:t.contenttypeid})}};
"use strict";module.exports={loadExecuteRequestor:function(){ExecuteOrDelayUntilScriptLoaded(function(){var e=_spPageContextInfo.siteAbsoluteUrl+"/_layouts/15/";$.getScript(e+"SP.RequestExecutor.js",function(){utilities.logToConsole({message:"request executor is now loaded"})})},"sp.js")},logToConsole:function(e){var t=$.extend(!0,{},{message:""});return console.log(t.message)},responsiveImages:function(e){var t=$.extend(!0,{},{image:".responsive-image"},e);$(t.image).each(function(){var t=$(this).parent(),s=$(this),a=setInterval(function(){if(0!=$(s).width()&&0!=t.length){t.addClass("responsive-image-container");var e=$(s).width()/$(s).height();$(t).width()/$(t).height()<e?$(s).width("auto").height("100%"):$(s).width("100%").height("auto"),clearInterval(a)}},100)})},showIfNotEmpty:function(e){var t=$.extend(!0,{},{element:"",showElement:""},e);$(t.element).each(function(){var e=$(this).text().trim();t.showElement?0<e.length&&$(t.showElement).show():0<e.length&&$(this).show()})},siteBreadcrumb:function(){var e=_spPageContextInfo.siteAbsoluteUrl,t=_spPageContextInfo.siteServerRelativeUrl,s=_spPageContextInfo.webServerRelativeUrl,a=_spPageContextInfo.webTitle,o=s.replace(t+"/","").split("/");if(o.pop(),s!=t){$("header h2.brand").addClass("university-brand"),$("header .breadcrumb-title").append('<span class="breadcrumb-separator last-separator">&nbsp;/&nbsp;</span><span class="last-breadcrumb"><a href="'+s+'">'+a+"</a></span>");for(var r=function(){var s=e+"/"+o[n];$.ajax({type:"GET",headers:{accept:"application/json;odata=verbose","X-RequestDigest":bones.digest},url:s+"/_api/web/title",success:function(e){var t=e.d.Title;$('<span class="breadcrumb-separator">&nbsp;/&nbsp;</span><span class="breadcrumb-item"><a href="'+s+'">'+t+"</a></span>").insertBefore(".last-separator")}})},n=0;n<o.length;n++)r()}},scrollAction:function(){var e=$(window),t=$("body"),s=$("#s4-workspace"),a=e.height()/4;s.on("scroll",function(){var e=$(this).scrollTop();a<e?t.addClass("scroll-down"):t.removeClass("scroll-down")}),s.trigger("scroll"),$("[data-scroll]").on("click",function(e){e.preventDefault();$("#suiteBarDelta").outerHeight(),$("#s4-ribbonrow").outerHeight();var t=$("#s4-bodyContainer").offset().top,s=$(this).attr("data-scroll"),a=$("."+s).offset().top-t-73;$("#s4-workspace").stop().animate({scrollTop:a})})}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
